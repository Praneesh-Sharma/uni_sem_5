#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

#define SERVER_IP "127.0.0.1" // Change this to the server's IP address
#define SERVER_PORT 12345      // Change this to the server's port

#define BUFFER_SIZE 1024

int main() {
    int client_socket;
    struct sockaddr_in server_addr;
    char buffer[BUFFER_SIZE];

    // Create a socket
    client_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (client_socket == -1) {
        perror("Error in socket");
        exit(1);
    }

    // Configure the server address
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(SERVER_PORT);
    server_addr.sin_addr.s_addr = inet_addr(SERVER_IP);

    // Connect to the server
    if (connect(client_socket, (struct sockaddr*)&server_addr, sizeof(server_addr)) == -1) {
        perror("Error in connect");
        exit(1);
    }

    while (1) {
        // Read user input
        printf("Enter a message (type 'bye' to exit): ");
        fgets(buffer, BUFFER_SIZE, stdin);

        // Send the message to the server
        send(client_socket, buffer, strlen(buffer), 0);

        // Check if the user wants to exit
        if (strcmp(buffer, "bye\n") == 0) {
            printf("Disconnected from the server.\n");
            break;
        }

        // Receive and display the server's response
        int bytes_received = recv(client_socket, buffer, BUFFER_SIZE, 0);
        if (bytes_received == -1) {
            perror("Error in recv");
            break;
        }

        buffer[bytes_received] = '\0';
        printf("Server: %s", buffer);
    }

    // Close the client socket
    close(client_socket);

    return 0;
}

